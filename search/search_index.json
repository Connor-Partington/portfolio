{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About I\u2019m Connor, a technical and UX writer based in Manchester, UK. Someone who takes the unbelievably complicated things developers create and makes them understandable for everyone. Here you will find written and visual samples of projects and pieces of work I've managed or had involvement with. Projects Here are some projects I've worked on so far. Autocab SaaS Technical samples Here are samples of documents I've created. How I built my site Release notes Online help","title":"Home"},{"location":"#about","text":"I\u2019m Connor, a technical and UX writer based in Manchester, UK. Someone who takes the unbelievably complicated things developers create and makes them understandable for everyone. Here you will find written and visual samples of projects and pieces of work I've managed or had involvement with.","title":"About"},{"location":"#projects","text":"Here are some projects I've worked on so far. Autocab SaaS","title":"Projects"},{"location":"#technical-samples","text":"Here are samples of documents I've created. How I built my site Release notes Online help","title":"Technical samples"},{"location":"autocabsaas/","text":"Autocab SaaS Tools used : WordPress, Zendesk Skills : Writing, Editing, Organisation, Communication, Information Architecture, HTML, CSS, Theme and plugin installation, Web development, UX/UI, and site architecture. This project involved writing end-user documentation for all of Autocab's products, including taxi booking & dispatch software, accounting systems, an Android/iOS passenger and driver app, and a virtual phone system. As the sole technical writer, I worked with various SMEs to create topic-based online help. The documentation was hosted on WordPress and delivered through contextual help pages in each product. Audiences Overall the audience for this documentation was well-educated, but not necessarily technical. So the aim was to create easy-to-understand online help, without too much technical jargon, but at the same time, ensuring everything a user may need was covered. Challenges Autocab's existing documentation offered several challenges and opportunities: Documentation was hosted on WordPress with a single static page for release notes The WordPress configuration was disorganised Overused plugins were conflicting and causing issues Documentation didn't adhere to a style guide The documentation contained more marketing copy instead of helpful content Before starting any writing: Time was spent working with Autocab's WordPress site and products to understand how they work. The product categories were organised and the web of conflicting plugins was untangled. A style guide was put in place to maintain a consistent style, voice, and tone across the documentation. User personas were defined and used to set the audience for each product's documentation. The existing documentation was then rewritten to match the style guide and audiences, and new documentation was created to fill in any knowledge gaps for each product. Outcome Instead of a static release notes page, users now had an online knowledge base with categories for each product's documentation, and a search feature to find exactly what they're looking for. The project evolved into creating an online help centre based on Zendesk to centralise Autocab's support. This included: Creating an external and internal knowledge base. Rewriting all existing documentation. Configuring a live chat service to aid the support team. Configuring chatbot for automated responses. Working with developers to update contextual help links throughout each product. Feel free to can check out Autocab Help .","title":"Autocab SaaS"},{"location":"autocabsaas/#autocab-saas","text":"Tools used : WordPress, Zendesk Skills : Writing, Editing, Organisation, Communication, Information Architecture, HTML, CSS, Theme and plugin installation, Web development, UX/UI, and site architecture. This project involved writing end-user documentation for all of Autocab's products, including taxi booking & dispatch software, accounting systems, an Android/iOS passenger and driver app, and a virtual phone system. As the sole technical writer, I worked with various SMEs to create topic-based online help. The documentation was hosted on WordPress and delivered through contextual help pages in each product.","title":"Autocab SaaS"},{"location":"autocabsaas/#audiences","text":"Overall the audience for this documentation was well-educated, but not necessarily technical. So the aim was to create easy-to-understand online help, without too much technical jargon, but at the same time, ensuring everything a user may need was covered.","title":"Audiences"},{"location":"autocabsaas/#challenges","text":"Autocab's existing documentation offered several challenges and opportunities: Documentation was hosted on WordPress with a single static page for release notes The WordPress configuration was disorganised Overused plugins were conflicting and causing issues Documentation didn't adhere to a style guide The documentation contained more marketing copy instead of helpful content Before starting any writing: Time was spent working with Autocab's WordPress site and products to understand how they work. The product categories were organised and the web of conflicting plugins was untangled. A style guide was put in place to maintain a consistent style, voice, and tone across the documentation. User personas were defined and used to set the audience for each product's documentation. The existing documentation was then rewritten to match the style guide and audiences, and new documentation was created to fill in any knowledge gaps for each product.","title":"Challenges"},{"location":"autocabsaas/#outcome","text":"Instead of a static release notes page, users now had an online knowledge base with categories for each product's documentation, and a search feature to find exactly what they're looking for. The project evolved into creating an online help centre based on Zendesk to centralise Autocab's support. This included: Creating an external and internal knowledge base. Rewriting all existing documentation. Configuring a live chat service to aid the support team. Configuring chatbot for automated responses. Working with developers to update contextual help links throughout each product. Feel free to can check out Autocab Help .","title":"Outcome"},{"location":"how-I-built-my-site/","text":"How I built my site 10/12/2022 Previously I used Wix , however, it wasn't the result I was looking for so I decided to rebuild my portfolio using MkDocs , GitHub , and GitPages . If you would like to build a similar website then the next section includes a guide on how I did it. Install Python and MkDocs If you have Python installed already then you can skip this step. If not you can download and install the latest release from their website. Then install MkDocs through the command line by running: pip install mkdocs Create a new project Create a project by running the following command in the command line: mkdocs new project Change to your project directory using the cd command: cd project Check you have a folder named project that contains; a docs folder and two files mkdocs.yml , and index.md . For more details on these files see the MkDocs Getting Started guide. Preview your site You can preview your site by running the mkdocs serve command: mkdocs serve This will launch a local version of your site that you can view by going to http://127.0.0.1:8000/ in your browser. Build it Now you've had a look we can go ahead and build your site by running the mkdocs build command; mkdocs build This will create a new folder named site that includes everything you need for a static website. Host your site with GitHub and GitPages If you haven't already, create a GitHub repository for your website. Run the next command to make sure your /site folder is ignored by GitHub. echo \"site/\" >> .gitignore Then add your local MkDocs site to GitHub by running the following commands: git init git add . git commit -m \"First commit\" git remote add origin <REMOTE_URL> git push -u origin main The <REMOTE_URL> needs to be replaced with the URL of your repository. Lastly, run the mkdocs gh-deploy command: mkdocs gh-deploy MkDocs will commit and push the local site to your GitHub repository, and your website will be live on GitPages. The URL for your site will look similar to mine, https://connor-partington.github.io/portfolio/ , but it will include your GitHub username and project name instead.","title":"How I built my site"},{"location":"how-I-built-my-site/#how-i-built-my-site","text":"10/12/2022 Previously I used Wix , however, it wasn't the result I was looking for so I decided to rebuild my portfolio using MkDocs , GitHub , and GitPages . If you would like to build a similar website then the next section includes a guide on how I did it.","title":"How I built my site"},{"location":"how-I-built-my-site/#install-python-and-mkdocs","text":"If you have Python installed already then you can skip this step. If not you can download and install the latest release from their website. Then install MkDocs through the command line by running: pip install mkdocs","title":"Install Python and MkDocs"},{"location":"how-I-built-my-site/#create-a-new-project","text":"Create a project by running the following command in the command line: mkdocs new project Change to your project directory using the cd command: cd project Check you have a folder named project that contains; a docs folder and two files mkdocs.yml , and index.md . For more details on these files see the MkDocs Getting Started guide.","title":"Create a new project"},{"location":"how-I-built-my-site/#preview-your-site","text":"You can preview your site by running the mkdocs serve command: mkdocs serve This will launch a local version of your site that you can view by going to http://127.0.0.1:8000/ in your browser.","title":"Preview your site"},{"location":"how-I-built-my-site/#build-it","text":"Now you've had a look we can go ahead and build your site by running the mkdocs build command; mkdocs build This will create a new folder named site that includes everything you need for a static website.","title":"Build it"},{"location":"how-I-built-my-site/#host-your-site-with-github-and-gitpages","text":"If you haven't already, create a GitHub repository for your website. Run the next command to make sure your /site folder is ignored by GitHub. echo \"site/\" >> .gitignore Then add your local MkDocs site to GitHub by running the following commands: git init git add . git commit -m \"First commit\" git remote add origin <REMOTE_URL> git push -u origin main The <REMOTE_URL> needs to be replaced with the URL of your repository. Lastly, run the mkdocs gh-deploy command: mkdocs gh-deploy MkDocs will commit and push the local site to your GitHub repository, and your website will be live on GitPages. The URL for your site will look similar to mine, https://connor-partington.github.io/portfolio/ , but it will include your GitHub username and project name instead.","title":"Host your site with GitHub and GitPages"},{"location":"online-help/","text":"Online help This is a sample of an online help page I created as part of a larger documentation suite hosted on Zendesk. Set up CabCard on ManageIt Here's how you set up CabCard on ManageIt. Log in to ManageIt . Go to Management > Driver app > Settings Group > Features . Click the Add button. In the Name field, enter CabCard . Select Override Default Parameters . Under the Location section, select Google Play Services , Non-GPS , and Estimated GPS . Select the Meter tab. From the Meter Type dropdown, select Default . Select the External Devices tab. From the Card Reader dropdown, select CabCard . Click Save .","title":"Online help"},{"location":"online-help/#online-help","text":"This is a sample of an online help page I created as part of a larger documentation suite hosted on Zendesk.","title":"Online help"},{"location":"online-help/#set-up-cabcard-on-manageit","text":"Here's how you set up CabCard on ManageIt. Log in to ManageIt . Go to Management > Driver app > Settings Group > Features . Click the Add button. In the Name field, enter CabCard . Select Override Default Parameters . Under the Location section, select Google Play Services , Non-GPS , and Estimated GPS . Select the Meter tab. From the Meter Type dropdown, select Default . Select the External Devices tab. From the Card Reader dropdown, select CabCard . Click Save .","title":"Set up CabCard on ManageIt"},{"location":"release-notes/","text":"ManageIt 19.2 Here you will find the latest features, improvements, and bug fixes for ManageIt. To ensure you have the best experience using our product, we recommend updating to the latest version available. What's New Email templates Send the perfect email every time by using one of our new email templates. Accessed by selecting Communication > Email Templates from the main menu. On the Email Templates page, you can preview and use a wide range of email templates to suit your needs. Improvements The faster the better We've made some changes and optimised some code, so you should now notice improved loading times through the app. Sidebar redesign The sidebar has been completely redesigned to improve usability and to get back the needed space on the main panel. Resize and position You can now edit the size and position of images you've attached to an email. Bug Fixes Setting the date range on a report to a period over 30 days would cause the report to load endlessly. Trying to drag a ManageIt window between multiple screens was resulting in the window becoming transparent. When selecting multiple rows in a table, the \"Copy selected\" button did nothing at all. Some in-app help pages failed to load after the last update,","title":"Release notes"},{"location":"release-notes/#manageit-192","text":"Here you will find the latest features, improvements, and bug fixes for ManageIt. To ensure you have the best experience using our product, we recommend updating to the latest version available.","title":"ManageIt 19.2"},{"location":"release-notes/#whats-new","text":"","title":"What's New"},{"location":"release-notes/#email-templates","text":"Send the perfect email every time by using one of our new email templates. Accessed by selecting Communication > Email Templates from the main menu. On the Email Templates page, you can preview and use a wide range of email templates to suit your needs.","title":"Email templates"},{"location":"release-notes/#improvements","text":"","title":"Improvements"},{"location":"release-notes/#the-faster-the-better","text":"We've made some changes and optimised some code, so you should now notice improved loading times through the app.","title":"The faster the better"},{"location":"release-notes/#sidebar-redesign","text":"The sidebar has been completely redesigned to improve usability and to get back the needed space on the main panel.","title":"Sidebar redesign"},{"location":"release-notes/#resize-and-position","text":"You can now edit the size and position of images you've attached to an email.","title":"Resize and position"},{"location":"release-notes/#bug-fixes","text":"Setting the date range on a report to a period over 30 days would cause the report to load endlessly. Trying to drag a ManageIt window between multiple screens was resulting in the window becoming transparent. When selecting multiple rows in a table, the \"Copy selected\" button did nothing at all. Some in-app help pages failed to load after the last update,","title":"Bug Fixes"}]}